plot_binom_pmf <- function(n=2, p=0.5){
x <- 0:n
binomvals <- dbinom( )
plot(x, pois, type = "h", lwd = 5,
main = paste("Poisson density: mu = ", mu),
xlab = "x", ylab = "P(X=x)")
abline(v = mu_X, col = 'red', lwd = 4)
}
n <- 40
p_values <- c(0.05, 0.1, 0.4, 0.6, 0.9, 0.95)
# Create an empty plot
plot(1, type = "n", xlim = c(0, n), ylim = c(0, 0.2), xlab = "X", ylab = "Probability", main = "Binomial PMF")
# Loop through the p values and plot the Binomial PMF for each
colors <- rainbow(length(p_values))
for (i in 1:length(p_values)) {
p <- p_values[i]
x <- 0:n
probabilities <- dbinom(x, size = n, prob = p)
lines(x, probabilities, col = colors[i], lwd = 2)
}
plot_binom_cdf <- function(n, p) {
x <- 0:n  # Possible values of the random variable
cdf <- pbinom(x, size = n, prob = p)  # Calculate the CDF
# Plot the CDF
plot(x, cdf, type = "s", lwd = 2, xlab = "X", ylab = "CDF",
main = paste("Binomial CDF (n =", n, ", p =", p, ")"))
}
n <- 40
p_values <- c(0.05, 0.1, 0.4, 0.6, 0.9, 0.95)
# Create an empty plot
plot(1, type = "n", xlim = c(0, n), ylim = c(0, 1), xlab = "X", ylab = "CDF", main = "Binomial CDF")
# Loop through the p values and plot the CDFs
colors <- rainbow(length(p_values))
for (i in 1:length(p_values)) {
p <- p_values[i]
x <- 0:n
cdf <- pbinom(x, size = n, prob = p)
lines(x, cdf, col = colors[i], lwd = 2)
}
# Add a horizontal line at y = 0.8
abline(h = 0.8, col = "red", lty = 2)
n <- 100
plot_pois_pmf <- function(mu){
x <- 0:n
pois <- dpois(x, lambda = mu)
mu_X <- mu
plot(x, pois, type = "h", lwd = 5,
main = paste("Poisson density: mu = ", mu),
xlab = "x", ylab = "P(X=x)")
abline(v = mu_X, col = 'red', lwd = 4)
}
plot_pois_pmf(5)
mu_values <- c(0.5, 1, 5, 8, 20, 50)
# Create an empty plot
plot(1, type = "n", xlim = c(0, max(mu_values) * 3), ylim = c(0, 0.4), xlab = "X", ylab = "Probability", main = "Poisson PMF")
# Loop through the mu values and plot the PMFs
colors <- rainbow(length(mu_values))
for (i in 1:length(mu_values)) {
mu <- mu_values[i]
x <- 0:(mu * 3)
pmf <- dpois(x, lambda = mu)
lines(x, pmf, col = colors[i], lwd = 2)
}
plot_pois_cdf <- function(mu) {
x <- 0:(mu * 5)  # Adjust the range as needed
cdf <- ppois(x, lambda = mu)  # Calculate the Poisson CDF
plot(x, cdf, type = "s", lwd = 2, xlab = "X", ylab = "CDF",
main = paste("Poisson CDF (mu =", mu, ")"))
}
# Define the values of mu
mu_values <- c(0.5, 1, 5, 8, 20, 50)
# Create an empty plot
plot(1, type = "n", xlim = c(0, max(mu_values) * 5), ylim = c(0, 1), xlab = "X", ylab = "CDF", main = "Poisson CDF")
# Loop through the mu values and plot the CDFs
colors <- rainbow(length(mu_values))
for (i in 1:length(mu_values)) {
mu <- mu_values[i]
x <- 0:(mu * 5)
cdf <- ppois(x, lambda = mu)
lines(x, cdf, col = colors[i], lwd = 2)
}
n <- 10
p <- 0.5
mu <- 5
# Create a vector of x values
x <- 0:max(n, mu * 5)
# Calculate CDFs for both distributions
binom_cdf <- pbinom(x, size = n, prob = p)
poisson_cdf <- ppois(x, lambda = mu)
# Create a plot
plot(x, binom_cdf, type = "s", col = "blue", lwd = 2,
xlab = "X", ylab = "CDF", main = "Binomial and Poisson CDFs")
lines(x, poisson_cdf, type = "s", col = "red", lwd = 2)
n_binom <- 1000
p_binom <- 0.005
mu_pois <- 5
# Create a vector of x values
x <- 0:max(n_binom, mu_pois * 3)
# Calculate CDFs for both distributions
binom_cdf <- pbinom(x, size = n_binom, prob = p_binom)
poisson_cdf <- ppois(x, lambda = mu_pois)
# Create a plot
plot(x, binom_cdf, type = "l", col = "blue", lwd = 2,
xlab = "X", ylab = "CDF", main = "Binomial and Poisson CDFs")
# Add the Poisson CDF to the existing plot
lines(x, poisson_cdf, type = "l", col = "red", lwd = 2)
mu <- 5
sds <- c(0.4, 0.8, 1, 1.3, 1.8, 2)
x <- seq(-6, 6, length.out = 1000)
x <- 5+x
y <- dnorm(x, mean = 5, sd=0.2)
plot(x, y,
type = 'l',
main= "Plot of Normal Density with mean 5")
abline(v=5, h=0)
for(std in sds){
y_temp <- dnorm(x, mean = 5, sd=std)
lines(x, y_temp,
type = 'l',
col = 'red')
}
library(tidyverse)
x <- seq(-6, 6, length.out = 1000)
x <- 5+x
y_0.2 <- dnorm(x, mean= 5, sd = 0.2)
y_0.4 <- dnorm(x, mean= 5, sd = 0.4)
y_0.8 <- dnorm(x, mean= 5, sd = 0.8)
y_1 <- dnorm(x, mean= 5, sd = 1)
y_1.3 <- dnorm(x, mean= 5, sd = 1.3)
y_1.8 <- dnorm(x, mean = 5, sd = 1.8)
y_2 <- dnorm(x, mean= 5, sd = 2)
plot_data_pdf <- data.frame(x,y_0.2,y_0.4,y_0.8,y_1,y_1.3, y_1.8, y_2)
z_0.2 <- pnorm(x, mean= 5, sd = 0.2)
z_0.4 <- pnorm(x, mean= 5, sd = 0.4)
z_0.8 <- pnorm(x, mean= 5, sd = 0.8)
z_1 <- pnorm(x, mean= 5, sd = 1)
z_1.3 <- pnorm(x, mean= 5, sd = 1.3)
z_1.8 <- pnorm(x, mean = 5, sd = 1.8)
z_2 <- pnorm(x, mean= 5, sd = 2)
plot_data_cdf <- data.frame(x,z_0.2,z_0.4,z_0.8,z_1,z_1.3, z_1.8, z_2)
plot_data_cdf_new <- pivot_longer(plot_data_cdf,
cols = c(z_0.2,z_0.4,z_0.8,z_1,z_1.3, z_1.8, z_2),
names_to = "std_devs"
)
ggplot(data = plot_data_cdf_new,
aes(x = x,
y = value,
group = std_devs,
color = std_devs))+
geom_line()+
labs(title = "Normal Density Plots: Varying Std Devs",
subtitle = "",
x = "x-axis",
y = "density")
